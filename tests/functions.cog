Def Foo as (+ 1);

Print If == 5 Foo 4
	"PASS: Function call and return"
else
	"FAIL: Function call and return";

Do (
	Def Foo as (+ 3);

	Print If == 8 Foo 5
		"PASS: Function shadowing 1"
	else
		"FAIL: Function shadowing 1";
);

Print If == 8 Foo 7
	"PASS: Function shadowing 2"
else
	"FAIL: Function shadowing 2";

Let Recurred be Box False;
Def Bar as
(
	Let N;
	Do If == 0 N then (
		Set Recurred to True;
	) else (
		Bar with 0;
	);
);

call Bar with 10;
Print If Unbox Recurred
	"PASS: Recursion"
else
	"FAIL: Recursion";

Def Binrec1
( Let X;
	Do If > 1000 X
		then (Print "PASS: Binary recursion")
		else (Binrec2 with + 1 X);
);

Def Binrec2
(
	Binrec1 with + 1;
);

Binrec1 1;

