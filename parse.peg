%value "ast_list_t*"
%auxil "module_t*"

%source {
#define PCC_GETCHAR(auxil) fgetc(auxil->file)
}

%header {
#include "cognac.h"
}


expression
	<- l:statement ';' r:expression { $$ = join_ast(l, r); }
	/  l:statement { $$ = l; }

statement
	<- _? l:token _ r:statement { $$ = join_ast(r, l); }
	/  _ { $$ = NULL; }

formal <- [!A-Z+*/^><=]/'\''/'-'/'?'
informal <- formal/[a-z0-9]

token
	<- 'L'('e'/'E')('t'/'T') _ <formal informal*> { $$ = ast_single(let, (void*) lowercase($1)); }
	/  'D'('e'/'E')('f'/'F') _ <formal informal*> { $$ = ast_single(def, (void*) lowercase($2)); }
	/  '(' e:expression ')'         { $$ = ast_single(braces,     (void*) e);                 }
	/  <formal informal*>           { $$ = ast_single(identifier, (void*) lowercase($3));     }
	/  '\\'<informal+>              { $$ = ast_single(literal,    (void*) mk_lit(symbol, $4)); }
	/  <'"'('\\\\'/'\\"'/[^"])*'"'> { $$ = ast_single(literal,    (void*) mk_lit(string, $5)); }
	/  <'-'?[0-9]+('.'[0-9]+)?>     { $$ = ast_single(literal,    (void*) mk_lit(number, $6)); }

comment
	<- '~~'[^\n]*'\n'
	/  '~'[^~]+'~'

_ <- ([ \n\t\r]/comment/([a-z]informal*))+/!./&[();]
